apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

android {
    signingConfigs {
        muugi {
            keyAlias 'riotgame'
            keyPassword '123456'
            storeFile file('/Users/kevin/muugi.keystore')
            storePassword '123456'
        }
    }
    compileSdkVersion var.compileSdkVersion
    buildToolsVersion var.buildToolsVersion
    defaultConfig {
        applicationId "org.scau.riotgame"
        minSdkVersion var.minSdkVersion
        targetSdkVersion var.targetSdkVersion
        versionCode 2952
        versionName "6.1.7"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            // 显式声明支持注解
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"
            //是否zip对齐
//            zipAlignEnabled true
            // 缩减resource文件
//            shrinkResources true
            //Proguard
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.muugi
        }
    }
    //引入aar
//    repositories {
//        flatDir {
//            dirs 'libs' //this way we can find the .aar file in libs folder
//            //如果module中引入aar，则需要使用相对路径
//            //dirs '../riot_common/libs'
//        }
//    }
//    sourceSets {
//        main {
//            java.srcDirs = ['src/main/java']
//            manifest.srcFile 'src/main/AndroidManifest.xml'
//        }
//
//        debug {
//            java.srcDirs = ['src/debug/java']
//            manifest.srcFile 'src/debug/AndroidManifest.xml'
//        }
//    }

    //multiDex的一些相关配置，这样配置可以让你的编译速度更快
    dexOptions {
        preDexLibraries = false//让它不要对Lib做preDexing
        javaMaxHeapSize "4g"//增加java堆内存大小，避免导致编译时出现OOM异常
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //V4库
    api lib.SupportV4


    implementation project(':riot_common')
    if(isNewsLibrary.toBoolean()) {
        implementation project(':riot_news')
    }
    if (isCaptureLibrary.toBoolean()) {
        implementation project(':CaptureLibrary')
    }
    if (isDiscoveryLibrary.toBoolean()) {
        implementation project(':riot_discovery')
    }
    if (isAlbumLibrary.toBoolean()) {
        implementation project(':Album')
    }
    api lib.Design
    debugImplementation project(':DebugTools')
    annotationProcessor "com.jakewharton:butterknife-compiler:$Butterknife"
    implementation 'com.android.support:multidex:1.0.3'

}

//def apkFilePath = "${projectDir.absolutePath}/build/outputs/apk/release/app-release.apk"
//
//task uploadOnlineApk(dependsOn: 'assembleRelease') {
//    group = "pgy_release"
//    doLast {
//        uploadPGY(apkFilePath)
//    }
//}
//
//private def uploadPGY(String filePath) {
//    def stdout = new ByteArrayOutputStream()
//    exec {
//        println "apikey = " + rootProject.ext.pgy["apiKey"]
//        println "url = " + rootProject.ext.pgy["uploadUrl"]
//        executable = 'curl'
//        args = ['-F', "file=@${filePath}",
//                '-F', "uKey=${rootProject.ext.pgy["userKey"]}",
//                '-F', "_api_key=${rootProject.ext.pgy["apiKey"]}",
//                '-F', "updateDescription=test test",
//                rootProject.ext.pgy["uploadUrl"]]
//        standardOutput = stdout
//    }
//    String output = stdout.toString()
//    def parsedJson = new groovy.json.JsonSlurper().parseText(output)
//    println groovy.json.JsonOutput.prettyPrint(output)
//    File file = new File()
//}
